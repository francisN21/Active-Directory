{"version":3,"sources":["logo.svg","Components/Search/Search.js","Components/Utils/API.js","Components/Employee/Employees.js","Components/Nav/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","className","onChange","handleInputChange","value","userSearch","name","type","placeholder","aria-label","axios","get","Employees","state","sort","employees","e","target","x","str","setState","console","log","addInput","toLowerCase","sortByFirstname","sortName","y","first","reverse","API","then","res","data","results","catch","err","this","search","onClick","map","employee","includes","last","src","picture","medium","alt","location","city","email","cell","login","uuid","Component","Nav","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAAe,I,oDCqBAA,EAlBA,SAACC,GACd,OACE,qBAAKC,UAAU,sBAAf,SACE,+BACE,uBACEC,SAAUF,EAAMG,kBAChBC,MAAOJ,EAAMK,WACbJ,UAAU,cACVK,KAAK,SACLC,KAAK,OACLC,YAAY,+BACZC,aAAW,gB,iBCTN,EACD,WACV,OAAOC,IAAMC,IALF,0CCGMC,G,kNACnBC,MAAQ,CACNC,KAAM,GACNC,UAAW,GACXV,WAAY,I,EAWdF,kBAAoB,SAACa,GACnB,GAAKA,EAAEC,OAAOX,KAAO,SAAW,EAGb,SAACY,GAChB,IAAIC,EAAM,GACVA,GAAOD,EAEP,EAAKE,SAAS,CACZf,WAAYc,IAEdE,QAAQC,IAAIH,GAEdI,CAXgBP,EAAEC,OAAOb,MAAMoB,eAAiBR,EAAEC,OAAOb,S,EAe7DqB,gBAAkB,WAChB,IAAMC,EAAW,EAAKb,MAAME,UAAUD,MAAK,SAACI,EAAGS,GAC7C,OAAIT,EAAEZ,KAAKsB,MAAQD,EAAErB,KAAKsB,OAChB,EAENV,EAAEZ,KAAKsB,MAAQD,EAAErB,KAAKsB,MACjB,OADT,KAIsB,MAApB,EAAKf,MAAMC,MACbY,EAASG,UACT,EAAKT,SAAS,CAAEN,KAAM,OAEtB,EAAKM,SAAS,CAAEN,KAAM,MAExB,EAAKM,SAAS,CAAEL,UAAWW,K,uDAzC7B,WAAqB,IAAD,OAClBI,IACGC,MAAK,SAACC,GACL,EAAKZ,SAAS,CAAEL,UAAWiB,EAAIC,KAAKC,UACpCb,QAAQC,IAAI,EAAKT,MAAME,UAAU,OAElCoB,OAAM,SAACC,GAAD,OAASf,QAAQC,IAAIc,Q,oBAsChC,WAAU,IAAD,OACP,OACE,sBAAKnC,UAAU,8BAAf,UACE,cAAC,EAAD,CACEE,kBAAmBkC,KAAKlC,kBACxBmC,OAAQD,KAAKxB,MAAMR,aAErB,wBAAQkC,QAASF,KAAKZ,gBAAtB,0BACCY,KAAKxB,MAAME,UAAUyB,KAAI,SAACC,GAAD,OACxBA,EAASnC,KAAKsB,MAAMJ,cAAckB,SAAS,EAAK7B,MAAMR,aAgBlDoC,EAASnC,KAAKqC,KACbnB,cACAkB,SAAS,EAAK7B,MAAMR,YAjBvB,sBAA+BJ,UAAU,2BAAzC,UACE,qBACEA,UAAU,aACV2C,IAAKH,EAASI,QAAQC,OACtBC,IAAI,OAEN,8BACGN,EAASnC,KAAKsB,MADjB,IACyBa,EAASnC,KAAKqC,QAEvC,8BACGF,EAASO,SAASC,KADrB,KAC6BR,EAASO,SAASnC,SAE/C,4BAAI4B,EAASS,QACb,4BAAIT,EAASU,SAbLV,EAASW,MAAMC,MAiCvB,e,GA7FyBC,cCMxBC,G,MARH,WACV,OACE,qBAAKtD,UAAU,6CAAf,SACE,oBAAIA,UAAU,iBAAd,kCCaSuD,MAdf,WACE,OACE,sBAAKvD,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,UCDOwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9b976d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport \"./Search.css\";\n\nconst Search = (props) => {\n  return (\n    <div className=\" search-placeholder\">\n      <form>\n        <input\n          onChange={props.handleInputChange}\n          value={props.userSearch}\n          className=\" search-bar\"\n          name=\"search\"\n          type=\"text\"\n          placeholder=\"Search by First or Last name\"\n          aria-label=\"Search\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Search;\n","import axios from \"axios\";\n\nconst apiURL = \"https://randomuser.me/api/?results=50\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  UserSearch: function () {\n    return axios.get(apiURL);\n  },\n};\n","import React, { Component } from \"react\";\nimport Search from \"../Search/Search\";\nimport API from \"../Utils/API\";\nimport \"./Employees.css\";\n\nexport default class Employees extends Component {\n  state = {\n    sort: \"\",\n    employees: [],\n    userSearch: \"\",\n  };\n  componentDidMount() {\n    API.UserSearch()\n      .then((res) => {\n        this.setState({ employees: res.data.results });\n        console.log(this.state.employees[0]);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (e) => {\n    if ((e.target.name = \"search\")) {\n      let userInput = e.target.value.toLowerCase() || e.target.value;\n      //   need to add this function to add typed string\n      const addInput = (x) => {\n        let str = \"\";\n        str += x;\n\n        this.setState({\n          userSearch: str,\n        });\n        console.log(str);\n      };\n      addInput(userInput);\n    }\n  };\n\n  sortByFirstname = () => {\n    const sortName = this.state.employees.sort((x, y) => {\n      if (x.name.first < y.name.first) {\n        return -1;\n      }\n      if (x.name.first > y.name.first) {\n        return 1;\n      }\n    });\n    if (this.state.sort === \"y\") {\n      sortName.reverse();\n      this.setState({ sort: \"x\" });\n    } else {\n      this.setState({ sort: \"y\" });\n    }\n    this.setState({ employees: sortName });\n  };\n\n  render() {\n    return (\n      <div className=\"container position-relative\">\n        <Search\n          handleInputChange={this.handleInputChange}\n          search={this.state.userSearch}\n        />\n        <button onClick={this.sortByFirstname}>Sort by Name</button>\n        {this.state.employees.map((employee) =>\n          employee.name.first.toLowerCase().includes(this.state.userSearch) ? (\n            <div key={employee.login.uuid} className=\"user-container col-md-12\">\n              <img\n                className=\"user-image\"\n                src={employee.picture.medium}\n                alt=\"dp\"\n              />\n              <p>\n                {employee.name.first} {employee.name.last}\n              </p>\n              <p>\n                {employee.location.city}, {employee.location.state}\n              </p>\n              <p>{employee.email}</p>\n              <p>{employee.cell}</p>\n            </div>\n          ) : employee.name.last\n              .toLowerCase()\n              .includes(this.state.userSearch) ? (\n            <div key={employee.login.uuid} className=\"user-container col-md-12\">\n              <img\n                className=\"user-image\"\n                src={employee.picture.medium}\n                alt=\"dp\"\n              />\n              <p>\n                {employee.name.first} {employee.name.last}\n              </p>\n              <p>\n                {employee.location.city}, {employee.location.state}\n              </p>\n              <p>{employee.email}</p>\n              <p>{employee.cell}</p>\n            </div>\n          ) : null\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n  return (\n    <div className=\"col-md-12 nav-container  position-relative\">\n      <h1 className=\"header-content\">Active Directory</h1>\n    </div>\n  );\n};\n\nexport default Nav;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Employees from \"./Components/Employee/Employees\";\nimport Nav from \"./Components/Nav/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"row\">\n        <Nav />\n      </div>\n\n      <div className=\"content-container\">\n        <Employees />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}